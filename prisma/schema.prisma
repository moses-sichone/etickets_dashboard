// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  role      Role     @default(MERCHANT)
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  events    Event[]
  tickets   Ticket[]
  venues    Venue[]
  
  @@map("users")
}

model Event {
  id          String   @id @default(cuid())
  title       String
  description String?
  date        DateTime
  location    String?
  price       Float
  totalTickets Int     @default(0)
  availableTickets Int @default(0)
  status      EventStatus @default(UPCOMING)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  organizerId String
  organizer   User     @relation(fields: [organizerId], references: [id])
  venueId     String?
  venue       Venue?   @relation(fields: [venueId], references: [id])
  tickets     Ticket[]
  
  @@map("events")
}

model Ticket {
  id        String      @id @default(cuid())
  ticketNumber String   @unique
  price     Float
  status    TicketStatus @default(AVAILABLE)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  
  // Relations
  eventId   String
  event     Event   @relation(fields: [eventId], references: [id])
  userId    String?
  user      User?   @relation(fields: [userId], references: [id])
  
  @@map("tickets")
}

model Venue {
  id          String   @id @default(cuid())
  name        String
  address     String
  capacity    Int
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  ownerId     String
  owner       User    @relation(fields: [ownerId], references: [id])
  events      Event[]
  
  @@map("venues")
}

enum Role {
  ADMIN
  MERCHANT
}

enum EventStatus {
  UPCOMING
  ONGOING
  COMPLETED
  CANCELLED
}

enum TicketStatus {
  AVAILABLE
  SOLD
  RESERVED
  USED
  CANCELLED
}